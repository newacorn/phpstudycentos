<?php

/**
 * Class MySeriablizableParent
 */
class MySeriablizableParent implements Serializable{

    private $private;
    function __construct($private)
    {
        $this->private = $private;
    }

    public function unserialize($serialized)
    {
        // TODO: Implement unserialize() method.
        $this->private = unserialize($serialized);
    }

    public function serialize()
    {
        // TODO: Implement serialize() method.
        return serialize($this->private);
    }
}


class MySerializableChild extends MySeriablizableParent{

    protected  $protected;
    public  $public;

    public function __construct($private, $protected, $public)
    {
        $this->protected= $protected;
        $this->public= $public;
        parent::__construct($private);
    }

    public function serialize()
    {
       // return parent::serialize(); // TODO: Change the autogenerated stub
        return serialize(['public'=>$this->public,'protected'=> $this->protected,'parent' =>parent::serialize()]) ;
    }

    public function unserialize($serialized)
    {
       // parent::unserialize($serialized); // TODO: Change the autogenerated stub
        $arr = unserialize($serialized);
        $this->protected = $arr['protected'];
        $this->public = $arr['public'];
        parent::unserialize($arr['parent']);


    }

}


$obj = new MySerializableChild(1,2,3);

$sobj = serialize($obj);
$ssobj = unserialize($sobj);

var_dump($ssobj);
$arr = serialize([1,2,3]);
list($a,$b,$c) = unserialize($arr);
var_dump($a,$b,$c);

